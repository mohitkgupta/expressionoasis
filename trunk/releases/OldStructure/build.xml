<?xml version="1.0"?>

<project name="Xpressionengine" basedir="." default="all">

	<!-- Defining properties-->
	<property name="name" value="xpressionengine" />
	<property name="version" value="2-3" />
	<property name="root" value="." />
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />
	<property name="build.dir" value="build" />
	<property name="dist.dir" value="dist" />
	<property name="doc.dir" value="docs" />
	<property name="javadoc.dir" value="docs\api" />
	<property name="test.dir" value="test" />
	<property name="config.dir" value="config" />
	<property name="report.dir" value="report" />
	
	<!-- Providing the library-->
	<path id="classpath">
		<fileset dir="${lib.dir}">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${build.dir}" />
	</path>
	
	<path id="ant-classpath">
		<fileset dir="${lib.dir}\ant">
			<include name="*.jar" />
		</fileset>
	</path>

	<!-- Cleaning output dirs ( build, dist)-->
	<target name="clean" description="Clean output dirs (build, dist)">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<!-- Initializing output directories-->
	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${dist.dir}" />
	</target>

	<!-- Compile main source tree java files into class files, generate jar files-->
	<target name="compile" description="Compile main source tree java files and test cases into class files, generate jar files" depends="init">
		<!-- Compiling java files in src directory-->
		<javac destdir="${build.dir}" source="1.5" target="1.5" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${src.dir}" />
			<classpath refid="classpath" />
		</javac>
		<!-- Compiling java files in test directory-->
		<javac destdir="${build.dir}" source="1.5" target="1.5" debug="true" deprecation="false" optimize="false" failonerror="true">
			<src path="${test.dir}" />
			<classpath refid="classpath" />
		</javac>
	</target>

	<!-- copy library and properties file in to build directory-->
	<target name="build"  description="Compile main source tree java files into class files, generate jar files" depends="compile,init">
		<!-- Copying .properties file in o/p directory-->
		<copy todir="${build.dir}/${config.dir}" preservelastmodified="true">
			<fileset dir="${config.dir}">
				<include name="*.properties"/>
				<include name="*.xml"/>
			</fileset>
		</copy>
		<!-- Copying .required jars in o/p directory-->
		<mkdir dir="${build.dir}/lib" />
		<copy todir="${build.dir}/lib" preservelastmodified="true">
			<fileset dir="${lib.dir}">
			<include name="*.jar"/>
		</fileset>
		</copy>
		<copy todir="${build.dir}" preservelastmodified="true">
			<fileset dir="${src.dir}">
				<include name="*.properties"/>
				<include name="*.xml"/>
			</fileset>
		</copy>
		<copy todir="${build.dir}" preservelastmodified="true">
			<fileset dir="${test.dir}">
				<include name="*.properties"/>
				<include name="*.xml"/>
			</fileset>
		</copy>
	</target>

	<!-- Creating jar-->
	<target name="dist" depends="build">
	<echo message="dist target executed" />
		<jar jarfile="${dist.dir}/${name}-${version}.jar" compress="true" basedir="${build.dir}" />
	</target>

	<!--
	<taskdef name="splash" classname="org.apache.tools.ant.taskdefs.optional.splash.SplashTask">
        <classpath refid="dictionary-classpath"/>
    </taskdef>
-->
	<taskdef name="junit" classname="org.apache.tools.ant.taskdefs.optional.junit.JUnitTask">
		<classpath refid="ant-classpath"/>
		<classpath refid="classpath"/>
	</taskdef>

	<taskdef name="junitreport" classname="org.apache.tools.ant.taskdefs.optional.junit.XMLResultAggregator">
		<classpath refid="ant-classpath"/>
		<classpath refid="classpath"/>
	</taskdef>
	
	<!-- Running test cases -->
	<target name="run-tests" description="Run tests and generate test summary">

		<mkdir dir="${report.dir}" />

		<echo message="Using forkmode: ${test.fork.mode}" />
		<junit dir="${root}" printsummary="yes" haltonfailure="no" haltonerror="no">
			<jvmarg line="-Djava.awt.headless=true" />
			<jvmarg line="-XX:MaxPermSize=96m" />

			<classpath refid="classpath" />
			<classpath location="${test.dir}/org/ganges/expressionengine" />
			<formatter type="plain" usefile="false" />
			<formatter type="xml" />

			<batchtest fork="yes" todir="${report.dir}">
				<fileset dir="${test.dir}" includes="**/Test*.java" />
			</batchtest>
		</junit>
		<junitreport todir="${report.dir}">
			<fileset dir="${report.dir}">
				<include name="TEST-*.xml" />
			</fileset>
			<report todir="${report.dir}" />
		</junitreport>
	</target>
	
	<!-- Defining a tag containing all tags-->
	<target name="all" depends="clean, dist, run-tests, javadoc" description="Clean, build, dist, javadoc" />

	<!-- Creating all java docs-->
	<target name="javadoc" description="Generate POC Javadocs" depends="build">
		<!-- Deleting old docs-->
		<delete dir="${javadoc.dir}" failonerror="false" />
		<!-- Creating new directory for docs-->
		<mkdir dir="${javadoc.dir}" />
		<!-- Creating docs-->
		<javadoc sourcepath="${src.dir}" destdir="${javadoc.dir}" windowtitle="Xpressionengine" source="1.4" access="protected" author="true" version="true" use="true" defaultexcludes="true" header='&lt;a href=\"http://xpressionengine.blogspot.com/\" target=\"_top\"&gt;Xpressionengine&lt;/a&gt;'>
			<arg value="-breakiterator" />
			<arg value="-J-Xmx128m" />
			<arg value="-J-XX:MaxPermSize=128m" />
			<doctitle>
				<![CDATA[<h1>Xpressionengine</h1>]]></doctitle>
		<classpath refid="classpath" />
		<packageset dir="${src.dir}">
			<include name="org/ganges/**" />
		</packageset>

		<link href="http://java.sun.com/j2ee/1.4/docs/api" />
		<link href="http://www.junit.org/junit/javadoc/" />
		<link href="http://logging.apache.org/log4j/docs/api/" />
	</javadoc>
</target>
</project>
